
type Query {
    getAllTasks(ownerId: ID): [Task]!
    getAllClients(ownerId: ID): [Client]!
}

type Mutation {
  createTask(
           ownerId: ID!,
           taskName: String!,
           clientId: ID!
         ) : Task!

  deleteTask(
            ownerId: ID!,
            taskId:ID!
        ) : Boolean!

  setTaskComplete(
              ownerId: ID!,
              taskId: ID!,
              complete: Boolean!
           ) : Task!

  createSubtask(
           ownerId: ID!,
           taskId: ID!,
           subtaskName: String!,
           category: String!
           dependsOnIds: [ID]!
         ) : Subtask!

  deleteSubtask(
            ownerId: ID!,
            subtaskId:ID!
        ) : Boolean!

  setSubtaskComplete(
            ownerId: ID!,
            subtaskId: ID!,
            complete: Boolean!
         ) : Subtask!

  createTimeCommit(
           ownerId: ID!,
           subtaskId: ID!,
           time: Long!
         ) : TimeCommit!

  deleteTimeCommit(
           ownerId: ID!,
           subtaskId: ID!,
           timeCommitId: ID!,
         ) : Boolean!

  updateTimeCommit(
            ownerId: ID!,
            timeCommitId: ID!,
            time: Long!
           ) : TimeCommit!

  createClient(
         ownerId: ID!,
         clientName: String!,
         businessType: String!,
         location: String!
          ): Client!

  deleteClient(
           ownerId: ID!,
           clientId: ID!,
         ) : Boolean!
}

type Task {
  id: ID!
  ownerId: ID!
  taskName: String!
  client: Client!
  dateAdded: String!
  dateCompleted: String
  subtasks: [Subtask]!
  completed: Boolean!
}

type Subtask {
  id: ID!
  ownerId: ID!
  subtaskName: String!
  category: String!
  dateAdded: String!
  dateCompleted: String
  completed: Boolean!
  timeCommits: [TimeCommit]!
  dependsOn: [Subtask]!
}

type TimeCommit {
  id: ID!
  ownerId: ID!
  subtask: Subtask!
  date: String!
  time: Long!
}

type Client {
  id: ID!
  ownerId: ID!
  clientName: String!
  businessType: String!
  location: String!
}

type User {
  id: ID!
  email: String
  password: String
}
